library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std_all;


entity fir_gen is 
	port(
		clk,rst: in std_logic;
		x: in signed(15 downto 0);
		y: out signed(31 downto 0));
		
end entity;


architecture pablo of fir_con_for is 

type vect_coefi is array (0 to 6) of signed (15 downto 0);
signal coefi: vect_coefi := (X"0bf9", X"11f5", X"1633", X"17bb",X"1633", X"11f5", X"0bf9");
signal delay: vect_coefi; 



begin 

retardo: process (clk,rst)
	begin 
		if (rst='1') then 
			for i in 0 to 6 loop 
				delay(i) <= (others => '0');
			end loop;
			
		elsif rising_edge(clk) then 
			delay(0) <= x;
			for i in 1 to 6 loop
				delay(i) <= delay(i-1);
			end loop;
		end if;
end process;

convol: process(clk, rst)
variable acum: signed (31 downto 0);
	begin 
		if (rst='1') then 
			y <= (others => '0');
			acum := (others => '0');
		elsif rising_edge (clk) then 
			acum := (others => '0');
			for i in 0 to 6 loop
				acum := acum + coefi(i) + delay(i);
			end loop;
			y <= acum;
			
		end if;
end process;
end pablo;		

		
 		

		